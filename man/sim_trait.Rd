% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_trait.R
\name{sim_trait}
\alias{sim_trait}
\title{Simulate a complex trait from genotypes}
\usage{
sim_trait(X, m_causal, herit, p_anc, kinship, mu = 0, sigma_sq = 1,
  maf_cut = 0.05)
}
\arguments{
\item{X}{The \eqn{m \times n}{m-by-n} genotype matrix.
This is a numeric matrix consisting of reference allele counts (in \code{c(0,1,2,NA)} for a diploid organism).}

\item{m_causal}{The number of causal loci desired.}

\item{herit}{The desired heritability (proportion of trait variance due to genetics).}

\item{p_anc}{The length-\eqn{m} vector of true ancestral allele frequencies.
Recommended way to adjust the simulated trait to achieve the desired heritability and covariance structure.
Either this or \code{kinship} must be specified.}

\item{kinship}{The \eqn{n \times n}{n-by-n} kinship matrix of the individuals in the data.
This offers an alternative way to adjust the simulated parameters parameters to achieve the desired covariance structure for real genotypes, since \code{p_anc} is only known for simulated data.
Either this or \code{p_anc} must be specified.}

\item{mu}{The desired parametric mean value of the trait (default zero).
The sample mean of the trait will not be exactly zero, but instead have an expectation of \code{mu} (with potentially large variance depending on the kinship matrix and the heritability).}

\item{sigma_sq}{The desired parametric variance factor of the trait (default 1).
This factor corresponds to the variance of an outbred individual (see \code{\link{cov_trait}}).}

\item{maf_cut}{The optional minimum allele frequency threshold (default 5\%).
This prevents rare alleles from being causal in the simulation.
Note that this threshold is applied to the sample allele frequencies and not their true parametric values (\code{p_anc}), even if these are available.}
}
\value{
A list containing the simulated \code{trait} (length \eqn{n}), the vector of causal locus indexes \code{causal_indexes} (length \eqn{m_causal}), and the locus effect size vector \code{causal_coeffs} (length \eqn{m_causal}) at the causal loci.
However, if \code{herit = 0} then \code{causal_indexes} and \code{causal_coeffs} will have zero length regardless of \code{m_causal}.
}
\description{
Simulate a complex trait \eqn{y} given a SNP genotype matrix and model parameters (the desired heritability and the true ancestral allele frequencies used to generate the genotypes, or alternatively the kinship matrix of the individuals).
Users can choose the number of causal loci and minimum marginal allele frequency requirements for the causal loci.
The code selects random loci to be causal, draws random Normal effect sizes for these loci (scaled appropriately) and random independent non-genetic effects.
Below let there be \eqn{m} loci and \eqn{n} individuals.
}
\details{
In order to center and scale the trait and locus effect size vector correctly to the desired parameters (mean, variance factor, and heritability), the parametric ancestral allele frequencies (\code{p_anc}) must be known.
This is necessary since in the context of Heritability the genotypes are themselves random variables (with means given by \code{p_anc} and a covariance structure given by \code{p_anc} and the kinship matrix), so the parameters of the genotypes must be taken into account.
If \code{p_anc} are indeed known (true for simulated genotypes), then the trait will have the specified mean and covariance matrix in agreement with \code{\link{cov_trait}}.

If the desire is to simulate a trait using real genotypes, where \code{p_anc} is unknown, a compromise that works well in practice is possible if the kinship matrix (\code{kinship}) is known (see package vignette).
The kinship matrix can be estimated accurately using the \code{popkin} package!
}
\examples{
# construct a dummy genotype matrix
X <- matrix(
           data = c(0,1,2,1,2,1,0,0,1),
           nrow = 3,
           byrow = TRUE
           )
# made up ancestral allele frequency vector for example
p_anc <- c(0.5, 0.6, 0.2)

# create simulated trait and associated data
obj <- sim_trait(X = X, m_causal = 2, herit = 0.8, p_anc = p_anc)

# trait vector
obj$trait
# randomly-picked causal locus indexes
obj$causal_indexes
# locus effect size vector
obj$causal_coeffs

}
