% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_trait_model.R
\name{sim_trait_model}
\alias{sim_trait_model}
\title{Simulate a complex trait from a fixed trait model}
\usage{
sim_trait_model(
  model,
  X,
  labs = NULL,
  loci_on_cols = FALSE,
  X_subset = FALSE,
  skip_checks = FALSE
)
}
\arguments{
\item{model}{A list returned by a previous \code{sim_trait} call.
This list must have scalar values with names \code{sigma_sq}, \code{herit}, \code{sigma_sq_residual}, \code{alpha};
if \code{herit > 0}, then \code{causal_indexes} and \code{causal_coeffs} vectors are also required in this list.
Lastly, either \code{labs} and \code{model$labs_sigma_sq} must be both missing, or both must be present.}

\item{X}{The \code{m}-by-\code{n} genotype matrix (if \code{loci_on_cols = FALSE}, transposed otherwise), or a BEDMatrix object.
This is a numeric matrix consisting of reference allele counts (in \code{c(0, 1, 2, NA)} for a diploid organism).}

\item{labs}{Optional labels assigning individuals to groups, to simulate environment group effects.
Values can be numeric or strings, simply assigning the same values to individuals in the same group.
If vector (single environment), length must be number of individuals.
If matrix (multiple environments), individuals must be along rows, and environments along columns.
The environments are not required to be nested.
If this is non-\code{NULL}, then \code{labs_sigma_sq} must also be given!}

\item{loci_on_cols}{If \code{TRUE}, \code{X} has loci on columns and individuals on rows; if \code{FALSE} (the default), loci are on rows and individuals on columns.
If \code{X} is a BEDMatrix object, loci are always on the columns (\code{loci_on_cols} is ignored).}

\item{X_subset}{If \code{TRUE}, \code{X} is treated as if it were already subset to the desired causal loci.  Otherwise (default) \code{X} will be subset internally using \code{model$causal_indexes}.}

\item{skip_checks}{If \code{TRUE}, skips validations of input model and other parameters.
Not recommended for regular users; this is provided for \code{\link[=sim_trait]{sim_trait()}} internal use only, which calls \code{\link[=sim_trait_model]{sim_trait_model()}}, since these checks are redundant with \code{\link[=sim_trait]{sim_trait()}}'s own validations.}
}
\value{
The same type of named list returned by \code{\link[=sim_trait]{sim_trait()}}, please see that for more details.  This includes the desired \code{trait} values, as well as copies of the input model parameters.
}
\description{
This function requires a trait \code{model}, which contains values for all of its variance components and intercept coeficient, as well as pre-determined causal loci indexes along with their coefficients, and simply simulates the traits with genetic effects and random non-genetic effects, for the individuals provided.
This is useful to simulate traits for new individuals from a pre-existing model that was constructed using some previous data, so that the trait is fundamentally the same in all individuals (rather than a new random trait as \code{sim_trait} does for each call).
}
\examples{
# make two genotype matrices, one to construct the initial trait,
# the second one is a new dataset from which we want to simulate the same trait.
# They should have the same loci (number of rows), but individuals should be different!
X <- matrix(
    data = c(
        0, 1, 2,
        1, 2, 1,
        0, 0, 1
    ),
    nrow = 3,
    byrow = TRUE
)
X2 <- matrix(
    data = c(
        2, 1,
        2, 0,
        1, 1
    ),
    nrow = 3,
    byrow = TRUE
)

# here's a minimal `sim_trait` call that simulates a trait of interest from the first dataset
model <- sim_trait( X = X, m_causal = 2, herit = 0.7, kinship = 0.2 )

# use the same model to simulate traits for the new individuals!
obj <- sim_trait_model( model, X2 )
# trait vector for new individuals:
obj$trait

}
\seealso{
\code{\link[=sim_trait]{sim_trait()}} for simulating traits from scratch, picking random causal variants and their coefficients from various models.
}
